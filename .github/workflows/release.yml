name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        cd backend
        if [ "$GOOS" = "windows" ]; then
          go build -o ../dist/simple-server-manage-${{ matrix.goos }}-${{ matrix.goarch }}.exe main.go database.go
        else
          go build -o ../dist/simple-server-manage-${{ matrix.goos }}-${{ matrix.goarch }} main.go database.go
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ssm-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: ssm-*
        path: dist/
        merge-multiple: true

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/**/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}